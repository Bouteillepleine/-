name: Build OnePlus Kernel

on:
  workflow_dispatch:
    inputs:
      device_config:
        description: 'Device to build (OP10t, OP11, etc.)'
        required: true
        type: choice
        options:
          - OP10t
          - OP11
          - OP12
      ksu_meta:
        description: 'SukiSU meta (branch/tag/hash)'
        required: false
        default: 'susfs-main/âš¡Ultraâš¡/'
      hook:
        description: 'Hook type'
        required: false
        type: choice
        default: 'manual'
        options:
          - kprobe
          - manual
          - tracepoint
      lsm:
        description: 'Enable BBG LSM'
        required: false
        type: boolean
        default: false
      enable_zram:
        description: 'Enable ZRAM'
        required: false
        type: boolean
        default: false
      optimize_level:
        description: 'Optimization level'
        required: false
        type: choice
        default: 'O2'
        options:
          - O2
          - O3

jobs:
  build:
    name: Build ${{ inputs.device_config }}
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Load Device Configuration
        id: load_config
        run: |
          CONFIG_FILE="configs/${{ inputs.device_config }}.json"
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "::error::Configuration file not found: $CONFIG_FILE"
            exit 1
          fi
          
          echo "Loading configuration from: $CONFIG_FILE"
          cat "$CONFIG_FILE"
          
          CONFIG_JSON=$(cat "$CONFIG_FILE" | jq -c '.')
          echo "config_json=$CONFIG_JSON" >> "$GITHUB_OUTPUT"
      
      - name: Build Kernel
        id: build
        uses: ./.github/actions
        with:
          op_config_json: ${{ steps.load_config.outputs.config_json }}
          ksu_meta: ${{ inputs.ksu_meta }}
          hook: ${{ inputs.hook }}
          lsm: ${{ inputs.lsm }}
          enable_zram: ${{ inputs.enable_zram }}
          optimize_level: ${{ inputs.optimize_level }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Validate Build Outputs
        if: always()
        shell: bash
        run: |
          echo "::group::Validate build outputs"
          
          required_outputs=(
            "kernel_version"
            "sukisu_version"
            "susfs_version"
            "image_sha256"
            "warnings_count"
            "zip_name"
          )
          
          missing=0
          for output in "${required_outputs[@]}"; do
            case "$output" in
              kernel_version) value="${{ steps.build.outputs.kernel_version }}" ;;
              sukisu_version) value="${{ steps.build.outputs.sukisu_version }}" ;;
              susfs_version) value="${{ steps.build.outputs.susfs_version }}" ;;
              image_sha256) value="${{ steps.build.outputs.image_sha256 }}" ;;
              warnings_count) value="${{ steps.build.outputs.warnings_count }}" ;;
              zip_name) value="${{ steps.build.outputs.zip_name }}" ;;
            esac
            
            if [ -z "$value" ]; then
              echo "::warning::Missing output: $output"
              ((missing++))
            else
              echo "âœ… $output: $value"
            fi
          done
          
          if [ $missing -gt 0 ]; then
            echo "::warning::$missing output(s) missing (non-fatal)"
          fi
          
          echo "::endgroup::"
      
      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ inputs.device_config }}-${{ steps.build.outputs.kernel_version }}
          path: |
            ${{ inputs.device_config }}/artifacts/*.zip
            ${{ inputs.device_config }}/artifacts/*.txt
          retention-days: 7
      
      - name: Create Release (Optional)
        if: github.event_name == 'workflow_dispatch' && success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.device_config }}-${{ steps.build.outputs.kernel_version }}-${{ github.run_number }}
          name: Kernel ${{ inputs.device_config }} - ${{ steps.build.outputs.kernel_version }}
          body: |
            ## ðŸ“¦ Kernel Build Information
            
            **Device:** ${{ inputs.device_config }}
            **Kernel Version:** ${{ steps.build.outputs.kernel_version }}
            **SukiSU Version:** ${{ steps.build.outputs.sukisu_version }}
            **SUSFS Version:** ${{ steps.build.outputs.susfs_version }}
            
            **Build Configuration:**
            - Hook: ${{ inputs.hook }}
            - Optimization: ${{ inputs.optimize_level }}
            - ZRAM: ${{ inputs.enable_zram }}
            - LSM (BBG): ${{ inputs.lsm }}
            
            **Build Statistics:**
            - Image SHA256: `${{ steps.build.outputs.image_sha256 }}`
            - Warnings: ${{ steps.build.outputs.warnings_count }}
            
            **Package:** `${{ steps.build.outputs.zip_name }}`
          files: |
            ${{ inputs.device_config }}/artifacts/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
